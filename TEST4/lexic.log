INT int 274 1 1
IDENTIFICADOR i 303 1 5
= = 61 1 7
CONSTANT_ENTERA 2 306 1 9
* * 42 1 11
CONSTANT_ENTERA 6 306 1 13
PUNT_I_COMA ; 59 1 14
TYPEDEF typedef 284 3 1
STRUCT struct 282 3 9
IDENTIFICADOR t_alumne 303 3 16
CLAU_OBERTA { 123 3 25
INT int 274 4 4
IDENTIFICADOR a 303 4 8
PUNT_I_COMA ; 59 4 9
CHAR char 261 5 4
IDENTIFICADOR b 303 5 9
PUNT_I_COMA ; 59 5 10
DOUBLE double 266 6 4
IDENTIFICADOR c 303 6 11
PUNT_I_COMA ; 59 6 12
INT int 274 7 4
IDENTIFICADOR d 303 7 8
PUNT_I_COMA ; 59 7 9
CLAU_TANCADA } 125 8 1
IDENTIFICADOR t_alumne 303 8 3
PUNT_I_COMA ; 59 8 11
TYPEDEF_IDENTIFIER t_alumne 304 10 1
IDENTIFICADOR alumne1 303 10 10
COMA , 44 10 17
IDENTIFICADOR alumne2 303 10 19
PUNT_I_COMA ; 59 10 26
INT int 274 12 1
IDENTIFICADOR main 303 12 5
PARENTESI_OBERT ( 40 12 9
VOID void 287 12 10
PARENTESI_TANCAT ) 41 12 14
CLAU_OBERTA { 123 12 16
INT int 274 13 4
IDENTIFICADOR vlocalint1 303 13 8
COMA , 44 13 18
IDENTIFICADOR vlocalint2 303 13 20
PUNT_I_COMA ; 59 13 30
CHAR char 261 14 4
IDENTIFICADOR vlocalchar1 303 14 9
COMA , 44 14 20
IDENTIFICADOR vlocalchar2 303 14 22
PUNT_I_COMA ; 59 14 33
DOUBLE double 266 15 4
IDENTIFICADOR varraydouble1 303 15 11
C_OBERT [ 91 15 24
CONSTANT_ENTERA 10 306 15 25
C_TANCAT ] 93 15 27
PUNT_I_COMA ; 59 15 28
DOUBLE double 266 16 4
IDENTIFICADOR totalSum 303 16 11
PUNT_I_COMA ; 59 16 19
INT int 274 17 4
IDENTIFICADOR final 303 17 8
PUNT_I_COMA ; 59 17 13
IDENTIFICADOR vlocalint1 303 19 4
= = 61 19 15
CONSTANT_ENTERA 0 306 19 17
PUNT_I_COMA ; 59 19 18
IDENTIFICADOR vlocalint2 303 20 4
= = 61 20 15
IDENTIFICADOR vlocalint1 303 20 17
PUNT_I_COMA ; 59 20 27
IDENTIFICADOR vlocalchar1 303 21 4
= = 61 21 16
CONSTANT_CARACTER 'a' 305 21 18
PUNT_I_COMA ; 59 21 21
IDENTIFICADOR vlocalchar2 303 21 23
= = 61 21 35
CONSTANT_CARACTER 'b' 305 21 37
PUNT_I_COMA ; 59 21 40
WHILE while 289 23 4
PARENTESI_OBERT ( 40 23 10
IDENTIFICADOR vlocalint1 303 23 11
LE_OP <= 292 23 22
CONSTANT_ENTERA 10 306 23 25
PARENTESI_TANCAT ) 41 23 27
CLAU_OBERTA { 123 23 29
IDENTIFICADOR vlocalint2 303 24 7
ADD_ASSIG += 301 24 18
IDENTIFICADOR varraydouble1 303 24 21
C_OBERT [ 91 24 34
IDENTIFICADOR vlocalint1 303 24 35
C_TANCAT ] 93 24 45
PUNT_I_COMA ; 59 24 46
IDENTIFICADOR vlocalint1 303 25 7
INC_OP ++ 290 25 17
PUNT_I_COMA ; 59 25 19
CLAU_TANCADA } 125 26 4
DO do 265 28 4
CLAU_OBERTA { 123 28 7
IDENTIFICADOR vlocalchar1 303 29 7
= = 61 29 19
IDENTIFICADOR vlocalint1 303 29 21
PUNT_I_COMA ; 59 29 31
IDENTIFICADOR vlocalint1 303 30 7
INC_OP ++ 290 30 17
PUNT_I_COMA ; 59 30 19
FOR for 271 31 7
PARENTESI_OBERT ( 40 31 10
PUNT_I_COMA ; 59 31 11
IDENTIFICADOR i 303 31 13
< < 60 31 15
CONSTANT_ENTERA 10 306 31 17
PUNT_I_COMA ; 59 31 19
PARENTESI_TANCAT ) 41 31 20
CLAU_OBERTA { 123 31 22
IDENTIFICADOR i 303 31 24
INC_OP ++ 290 31 25
PUNT_I_COMA ; 59 31 27
CLAU_TANCADA } 125 31 29
CLAU_TANCADA } 125 32 4
WHILE while 289 32 6
PARENTESI_OBERT ( 40 32 12
IDENTIFICADOR vlocalint1 303 32 13
< < 60 32 24
CONSTANT_ENTERA 100 306 32 26
PARENTESI_TANCAT ) 41 32 29
PUNT_I_COMA ; 59 32 30
FOR for 271 34 4
PARENTESI_OBERT ( 40 34 7
IDENTIFICADOR i 303 34 8
= = 61 34 10
CONSTANT_ENTERA 0 306 34 12
PUNT_I_COMA ; 59 34 13
! ! 33 34 15
PARENTESI_OBERT ( 40 34 16
IDENTIFICADOR i 303 34 17
> > 62 34 19
CONSTANT_ENTERA 10 306 34 21
PARENTESI_TANCAT ) 41 34 23
PUNT_I_COMA ; 59 34 24
IDENTIFICADOR i 303 34 26
INC_OP ++ 290 34 27
PARENTESI_TANCAT ) 41 34 29
CLAU_OBERTA { 123 34 31
IDENTIFICADOR totalSum 303 35 7
ADD_ASSIG += 301 35 16
IDENTIFICADOR varraydouble1 303 35 19
C_OBERT [ 91 35 32
IDENTIFICADOR alumne2 303 35 33
PUNT . 46 35 40
IDENTIFICADOR d 303 35 41
* * 42 35 43
IDENTIFICADOR alumne1 303 35 45
PUNT . 46 35 52
IDENTIFICADOR a 303 35 53
C_TANCAT ] 93 35 54
* * 42 35 56
IDENTIFICADOR i 303 35 58
PUNT_I_COMA ; 59 35 59
CLAU_TANCADA } 125 36 4
CLAU_TANCADA } 125 37 1
