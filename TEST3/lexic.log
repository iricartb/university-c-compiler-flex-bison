INT int 274 1 1
IDENTIFICADOR i 303 1 5
= = 61 1 7
CONSTANT_ENTERA 2 306 1 9
* * 42 1 11
CONSTANT_ENTERA 6 306 1 13
PUNT_I_COMA ; 59 1 14
TYPEDEF typedef 284 3 1
STRUCT struct 282 3 9
IDENTIFICADOR t_alumne 303 3 16
CLAU_OBERTA { 123 3 25
INT int 274 4 4
IDENTIFICADOR a 303 4 8
PUNT_I_COMA ; 59 4 9
CHAR char 261 5 4
IDENTIFICADOR b 303 5 9
PUNT_I_COMA ; 59 5 10
DOUBLE double 266 6 4
IDENTIFICADOR c 303 6 11
PUNT_I_COMA ; 59 6 12
INT int 274 7 4
IDENTIFICADOR d 303 7 8
PUNT_I_COMA ; 59 7 9
CLAU_TANCADA } 125 8 1
IDENTIFICADOR t_alumne 303 8 3
PUNT_I_COMA ; 59 8 11
TYPEDEF_IDENTIFIER t_alumne 304 10 1
IDENTIFICADOR alumne1 303 10 10
COMA , 44 10 17
IDENTIFICADOR alumne2 303 10 19
PUNT_I_COMA ; 59 10 26
INT int 274 12 1
IDENTIFICADOR main 303 12 5
PARENTESI_OBERT ( 40 12 9
VOID void 287 12 10
PARENTESI_TANCAT ) 41 12 14
CLAU_OBERTA { 123 12 16
INT int 274 13 4
IDENTIFICADOR vlocalint1 303 13 8
COMA , 44 13 18
IDENTIFICADOR vlocalint2 303 13 20
PUNT_I_COMA ; 59 13 30
CHAR char 261 14 4
IDENTIFICADOR vlocalchar1 303 14 9
COMA , 44 14 20
IDENTIFICADOR vlocalchar2 303 14 22
PUNT_I_COMA ; 59 14 33
DOUBLE double 266 15 4
IDENTIFICADOR varraydouble1 303 15 11
C_OBERT [ 91 15 24
CONSTANT_ENTERA 10 306 15 25
C_TANCAT ] 93 15 27
PUNT_I_COMA ; 59 15 28
IDENTIFICADOR vlocalint1 303 17 4
= = 61 17 15
CONSTANT_ENTERA 0 306 17 17
PUNT_I_COMA ; 59 17 18
IDENTIFICADOR vlocalint2 303 18 4
= = 61 18 15
IDENTIFICADOR vlocalint1 303 18 17
PUNT_I_COMA ; 59 18 27
IDENTIFICADOR vlocalchar1 303 19 4
= = 61 19 16
CONSTANT_CARACTER 'a' 305 19 18
PUNT_I_COMA ; 59 19 21
IDENTIFICADOR vlocalchar2 303 19 23
= = 61 19 35
CONSTANT_CARACTER 'b' 305 19 37
PUNT_I_COMA ; 59 19 40
IF if 273 21 4
PARENTESI_OBERT ( 40 21 7
PARENTESI_OBERT ( 40 21 8
PARENTESI_OBERT ( 40 21 9
IDENTIFICADOR vlocalint1 303 21 10
GE_OP >= 293 21 21
CONSTANT_ENTERA 10 306 21 24
PARENTESI_TANCAT ) 41 21 26
AND_OP && 296 21 28
PARENTESI_OBERT ( 40 21 31
IDENTIFICADOR vlocalint1 303 21 32
LE_OP <= 292 21 43
CONSTANT_ENTERA 20 306 21 46
PARENTESI_TANCAT ) 41 21 48
PARENTESI_TANCAT ) 41 21 49
OR_OP || 297 21 51
PARENTESI_OBERT ( 40 21 54
IDENTIFICADOR vlocalint1 303 21 55
EQ_OP == 294 21 66
CONSTANT_ENTERA 99 306 21 69
PARENTESI_TANCAT ) 41 21 71
PARENTESI_TANCAT ) 41 21 72
IDENTIFICADOR vlocalint1 303 21 74
= = 61 21 85
CONSTANT_ENTERA 100 306 21 87
PUNT_I_COMA ; 59 21 90
ELSE else 267 22 4
CLAU_OBERTA { 123 22 9
IF if 273 23 7
PARENTESI_OBERT ( 40 23 10
PARENTESI_OBERT ( 40 23 11
IDENTIFICADOR vlocalint1 303 23 12
EQ_OP == 294 23 23
CONSTANT_ENTERA 100 306 23 26
PARENTESI_TANCAT ) 41 23 29
OR_OP || 297 23 31
PARENTESI_OBERT ( 40 23 34
IDENTIFICADOR vlocalint1 303 23 35
EQ_OP == 294 23 46
CONSTANT_ENTERA 101 306 23 49
PARENTESI_TANCAT ) 41 23 52
PARENTESI_TANCAT ) 41 23 53
CLAU_OBERTA { 123 23 55
IDENTIFICADOR vlocalint1 303 24 10
= = 61 24 21
CONSTANT_ENTERA 15 306 24 23
PUNT_I_COMA ; 59 24 25
IDENTIFICADOR vlocalint2 303 25 10
= = 61 25 21
CONSTANT_ENTERA 15 306 25 23
PUNT_I_COMA ; 59 25 25
RETURN return 277 26 10
CONSTANT_ENTERA 3 306 26 17
* * 42 26 19
CONSTANT_ENTERA 3 306 26 21
PUNT_I_COMA ; 59 26 22
CLAU_TANCADA } 125 27 7
CLAU_TANCADA } 125 28 4
RETURN return 277 30 4
- - 45 30 11
CONSTANT_FLOTANT 1.0 307 30 12
PUNT_I_COMA ; 59 30 15
CLAU_TANCADA } 125 31 1
